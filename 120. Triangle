class Solution {
    public int minimumTotal(List<List<Integer>> triangle) {
        if(triangle.size()==1)
            return triangle.get(0).get(0);
        
          int ans = fun(triangle);
        return ans;
        
        
    }
     static int fun(List<List<Integer>> triangle) {
        int sum = 0;
        int arr[][] = new int[triangle.size()][triangle.size()];
        arr[0][0] = triangle.get(0).get(0); // 1

        arr[1][0] = arr[0][0] + triangle.get(1).get(0); // 2
        arr[1][1] = arr[0][0] + triangle.get(1).get(1); // 2

        for (int i = 2; i < triangle.size(); i++) {
            arr[i][0] = arr[i - 1][0] + triangle.get(i).get(0);
            int j = 1;
            for (; j < i; j++) {
                arr[i][j] = Math.min(arr[i - 1][j - 1], arr[i - 1][j]) + triangle.get(i).get(j);
            }


            arr[i][j] = arr[i - 1][j - 1] + triangle.get(i).get(i);
        }
        int row = arr.length;
        int min = Integer.MAX_VALUE;
        for (int i = 0; i < row; i++) {
            min = Math.min(min, arr[row - 1][i]);
        }

        return min;

    }
}

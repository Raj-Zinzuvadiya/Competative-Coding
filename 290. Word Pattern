class Solution {
    public boolean wordPattern(String pattern, String s) {
        String str[] = s.split(" ");

        if (pattern.length() != str.length)
            return false;
        HashMap<String, Character> map = new HashMap<>();
        String arr[] = new String[26];
        for (int i = 0; i < pattern.length(); i++) {
            if (arr[pattern.charAt(i) - 'a'] == null) {
                arr[pattern.charAt(i) - 'a'] = str[i];
                if(!map.containsKey(str[i]))
                {
                    map.put(str[i], pattern.charAt(i));
                }
                else
                {
                    if(map.get(str[i])!=pattern.charAt(i))
                        return false;
                }
            } else {
                if (!arr[pattern.charAt(i) - 'a'].equals(str[i]))
                    return false;
            }
        }


        return true;
        
    }
}
